{"ast":null,"code":"var _jsxFileName = \"/home/hejoel/fullstack/fullstack-part5/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport BlogForm from './components/BlogForm';\nimport Notification from './components/Notification';\nimport Togglable from './components/Togglable';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [infoMessage, setInfoMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const blogFormRef = React.createRef();\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(sortBlogList(blogs)));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const sortBlogList = list => {\n    return list.sort((a, b) => {\n      return b.likes - a.likes || a.title.localeCompare(b.title);\n    });\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('wrong username or password');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = async event => {\n    event.preventDefault();\n    window.localStorage.removeItem('loggedBlogappUser');\n    blogService.setToken(null);\n    setUser(null);\n  };\n\n  const addBlog = async blogObject => {\n    try {\n      blogFormRef.current.setVisible(false);\n      const addedBlog = await blogService.create(blogObject);\n      setBlogs(sortBlogList(blogs.concat(addedBlog)));\n      setInfoMessage(`added blog \"${addedBlog.title}\" by ${addedBlog.author}`);\n      setTimeout(() => {\n        setInfoMessage(null);\n      }, 5000);\n    } catch (exception) {\n      console.log(exception);\n      setErrorMessage('failed to create blog');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const updateBlog = async (blogId, blogObject) => {\n    try {\n      const newBlog = await blogService.update(blogId, blogObject);\n      setBlogs(sortBlogList(blogs.map(blog => blog.id === blogId ? newBlog : blog)));\n    } catch (exception) {\n      console.log(exception);\n      setErrorMessage('failed to update blog');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const likeBlog = async blogId => {\n    try {\n      const blog = await blogService.get(blogId);\n      await updateBlog(blogId, {\n        likes: blog.likes + 1\n      });\n    } catch (exception) {\n      console.log(exception);\n      setErrorMessage('failed to like blog');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const deleteBlog = async blogId => {\n    try {\n      await blogService.remove(blogId);\n      setBlogs(sortBlogList(blogs.filter(blog => blog.id !== blogId)));\n    } catch (exception) {\n      console.log(exception);\n      setErrorMessage('failed to delete blog');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const loginForm = () => React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"username\", React.createElement(\"input\", {\n    id: \"username\",\n    type: \"text\",\n    value: username,\n    name: \"Username\",\n    onChange: ({\n      target\n    }) => setUsername(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"password\", React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    value: password,\n    name: \"Password\",\n    onChange: ({\n      target\n    }) => setPassword(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    id: \"login-button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"login\"));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Notification, {\n    message: infoMessage,\n    color: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    message: errorMessage,\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), user === null ? loginForm() : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"logged in as \", user.name, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"logout\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"blogs\"), blogs.map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    likeBlog: () => likeBlog(blog.id),\n    showRemove: blog.user.id === user.id,\n    deleteBlog: () => deleteBlog(blog.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }))), React.createElement(Togglable, {\n    buttonLabel: \"add blog\",\n    ref: blogFormRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(BlogForm, {\n    createBlog: addBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-part5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","BlogForm","Notification","Togglable","blogService","loginService","App","blogs","setBlogs","infoMessage","setInfoMessage","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","blogFormRef","createRef","getAll","then","sortBlogList","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","list","sort","a","b","likes","title","localeCompare","handleLogin","event","preventDefault","login","setItem","stringify","exception","setTimeout","handleLogout","removeItem","addBlog","blogObject","current","setVisible","addedBlog","create","concat","author","console","log","updateBlog","blogId","newBlog","update","map","blog","id","likeBlog","get","deleteBlog","remove","filter","loginForm","target","value","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMqB,WAAW,GAAGtB,KAAK,CAACuB,SAAN,EAApB;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW,CAACiB,MAAZ,GAAqBC,IAArB,CAA0Bf,KAAK,IAC7BC,QAAQ,CAACe,YAAY,CAAChB,KAAD,CAAb,CADV;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,cAAc,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,CAAvB;;AACA,QAAIH,cAAJ,EAAoB;AAClB,YAAMP,IAAI,GAAGW,IAAI,CAACC,KAAL,CAAWL,cAAX,CAAb;AACAN,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAb,MAAAA,WAAW,CAAC0B,QAAZ,CAAqBb,IAAI,CAACc,KAA1B;AACD;AACF,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMR,YAAY,GAAGS,IAAI,IAAI;AAC3B,WAAOA,IAAI,CAACC,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB,aAAOA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAZ,IAAqBF,CAAC,CAACG,KAAF,CAAQC,aAAR,CAAsBH,CAAC,CAACE,KAAxB,CAA5B;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,QAAME,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACF,YAAMxB,IAAI,GAAG,MAAMZ,YAAY,CAACqC,KAAb,CAAmB;AACpC7B,QAAAA,QADoC;AAC1BE,QAAAA;AAD0B,OAAnB,CAAnB;AAIAU,MAAAA,MAAM,CAACC,YAAP,CAAoBiB,OAApB,CACE,mBADF,EACuBf,IAAI,CAACgB,SAAL,CAAe3B,IAAf,CADvB;AAGAb,MAAAA,WAAW,CAAC0B,QAAZ,CAAqBb,IAAI,CAACc,KAA1B;AACAb,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAH,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAZD,CAYE,OAAO6B,SAAP,EAAkB;AAClBjC,MAAAA,eAAe,CAAC,4BAAD,CAAf;AACAkC,MAAAA,UAAU,CAAC,MAAM;AACflC,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GApBD;;AAsBA,QAAMmC,YAAY,GAAG,MAAOP,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AAEAhB,IAAAA,MAAM,CAACC,YAAP,CAAoBsB,UAApB,CAA+B,mBAA/B;AACA5C,IAAAA,WAAW,CAAC0B,QAAZ,CAAqB,IAArB;AACAZ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAND;;AAQA,QAAM+B,OAAO,GAAG,MAAOC,UAAP,IAAsB;AACpC,QAAI;AACF/B,MAAAA,WAAW,CAACgC,OAAZ,CAAoBC,UAApB,CAA+B,KAA/B;AACA,YAAMC,SAAS,GAAG,MAAMjD,WAAW,CAACkD,MAAZ,CAAmBJ,UAAnB,CAAxB;AACA1C,MAAAA,QAAQ,CAACe,YAAY,CAAChB,KAAK,CAACgD,MAAN,CAAaF,SAAb,CAAD,CAAb,CAAR;AAEA3C,MAAAA,cAAc,CAAE,eAAc2C,SAAS,CAAChB,KAAM,QAAOgB,SAAS,CAACG,MAAO,EAAxD,CAAd;AACAV,MAAAA,UAAU,CAAC,MAAM;AACfpC,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KATD,CASE,OAAOmC,SAAP,EAAkB;AAClBY,MAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AACAjC,MAAAA,eAAe,CAAC,uBAAD,CAAf;AACAkC,MAAAA,UAAU,CAAC,MAAM;AACflC,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GAjBD;;AAmBA,QAAM+C,UAAU,GAAG,OAAOC,MAAP,EAAeV,UAAf,KAA8B;AAC/C,QAAI;AACF,YAAMW,OAAO,GAAG,MAAMzD,WAAW,CAAC0D,MAAZ,CAAmBF,MAAnB,EAA2BV,UAA3B,CAAtB;AACA1C,MAAAA,QAAQ,CAACe,YAAY,CAAChB,KAAK,CAACwD,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,OAArB,GAA+BG,IAAjD,CAAD,CAAb,CAAR;AACD,KAHD,CAGE,OAAOnB,SAAP,EAAkB;AAClBY,MAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AACAjC,MAAAA,eAAe,CAAC,uBAAD,CAAf;AACAkC,MAAAA,UAAU,CAAC,MAAM;AACflC,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GAXD;;AAaA,QAAMsD,QAAQ,GAAG,MAAON,MAAP,IAAkB;AACjC,QAAI;AACF,YAAMI,IAAI,GAAG,MAAM5D,WAAW,CAAC+D,GAAZ,CAAgBP,MAAhB,CAAnB;AACA,YAAMD,UAAU,CAACC,MAAD,EAAS;AACvBxB,QAAAA,KAAK,EAAE4B,IAAI,CAAC5B,KAAL,GAAa;AADG,OAAT,CAAhB;AAGD,KALD,CAKE,OAAOS,SAAP,EAAkB;AAClBY,MAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AACAjC,MAAAA,eAAe,CAAC,qBAAD,CAAf;AACAkC,MAAAA,UAAU,CAAC,MAAM;AACflC,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GAbD;;AAeA,QAAMwD,UAAU,GAAG,MAAOR,MAAP,IAAkB;AACnC,QAAI;AACF,YAAMxD,WAAW,CAACiE,MAAZ,CAAmBT,MAAnB,CAAN;AACApD,MAAAA,QAAQ,CAACe,YAAY,CAAChB,KAAK,CAAC+D,MAAN,CAAaN,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAjC,CAAD,CAAb,CAAR;AACD,KAHD,CAGE,OAAOf,SAAP,EAAkB;AAClBY,MAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AACAjC,MAAAA,eAAe,CAAC,uBAAD,CAAf;AACAkC,MAAAA,UAAU,CAAC,MAAM;AACflC,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GAXD;;AAaA,QAAM2D,SAAS,GAAG,MAChB;AAAM,IAAA,QAAQ,EAAEhC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAE1B,QAHT;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,QAAQ,EAAE,CAAC;AAAE2D,MAAAA;AAAF,KAAD,KAAgB1D,WAAW,CAAC0D,MAAM,CAACC,KAAR,CALvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAE1D,QAHT;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,QAAQ,EAAE,CAAC;AAAEyD,MAAAA;AAAF,KAAD,KAAgBxD,WAAW,CAACwD,MAAM,CAACC,KAAR,CALvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,EAqBE;AAAQ,IAAA,EAAE,EAAC,cAAX;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aArBF,CADF;;AA0BA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEhE,WAAvB;AAAoC,IAAA,KAAK,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEE,YAAvB;AAAqC,IAAA,KAAK,EAAC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIGM,IAAI,KAAK,IAAT,GACGsD,SAAS,EADZ,GAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAM,IAAA,QAAQ,EAAExB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACgB9B,IAAI,CAACyD,IADrB,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAFA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGnE,KAAK,CAACwD,GAAN,CAAUC,IAAI,IACb,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,QAAQ,EAAE,MAAME,QAAQ,CAACF,IAAI,CAACC,EAAN,CAH1B;AAIE,IAAA,UAAU,EAAED,IAAI,CAAC/C,IAAL,CAAUgD,EAAV,KAAiBhD,IAAI,CAACgD,EAJpC;AAKE,IAAA,UAAU,EAAE,MAAMG,UAAU,CAACJ,IAAI,CAACC,EAAN,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CAPA,EAoBA,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,UAAvB;AAAkC,IAAA,GAAG,EAAE9C,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAE8B,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApBA,CANN,CADF;AAkCD,CApLD;;AAsLA,eAAe3C,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [infoMessage, setInfoMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(sortBlogList(blogs))\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const sortBlogList = list => {\n    return list.sort((a, b) => {\n      return b.likes - a.likes || a.title.localeCompare(b.title)\n    })\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong username or password')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n\n    window.localStorage.removeItem('loggedBlogappUser')\n    blogService.setToken(null)\n    setUser(null)\n  }\n\n  const addBlog = async (blogObject) => {\n    try {\n      blogFormRef.current.setVisible(false)\n      const addedBlog = await blogService.create(blogObject)\n      setBlogs(sortBlogList(blogs.concat(addedBlog)))\n\n      setInfoMessage(`added blog \"${addedBlog.title}\" by ${addedBlog.author}`)\n      setTimeout(() => {\n        setInfoMessage(null)\n      }, 5000)\n    } catch (exception) {\n      console.log(exception)\n      setErrorMessage('failed to create blog')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const updateBlog = async (blogId, blogObject) => {\n    try {\n      const newBlog = await blogService.update(blogId, blogObject)\n      setBlogs(sortBlogList(blogs.map(blog => blog.id === blogId ? newBlog : blog)))\n    } catch (exception) {\n      console.log(exception)\n      setErrorMessage('failed to update blog')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const likeBlog = async (blogId) => {\n    try {\n      const blog = await blogService.get(blogId)\n      await updateBlog(blogId, {\n        likes: blog.likes + 1\n      })\n    } catch (exception) {\n      console.log(exception)\n      setErrorMessage('failed to like blog')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const deleteBlog = async (blogId) => {\n    try {\n      await blogService.remove(blogId)\n      setBlogs(sortBlogList(blogs.filter(blog => blog.id !== blogId)))\n    } catch (exception) {\n      console.log(exception)\n      setErrorMessage('failed to delete blog')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          id=\"username\"\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n        <input\n          id=\"password\"\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button id=\"login-button\" type=\"submit\">login</button>\n    </form>\n  )\n\n  return (\n    <div>\n      <Notification message={infoMessage} color=\"green\" />\n      <Notification message={errorMessage} color=\"red\" />\n\n      {user === null\n        ? loginForm()\n        : <div>\n\n          <form onSubmit={handleLogout}>\n            logged in as {user.name}\n            <button type=\"submit\">logout</button>\n          </form>\n\n          <div>\n            <h2>blogs</h2>\n            {blogs.map(blog =>\n              <Blog\n                key={blog.id}\n                blog={blog}\n                likeBlog={() => likeBlog(blog.id)}\n                showRemove={blog.user.id === user.id}\n                deleteBlog={() => deleteBlog(blog.id)}\n              />\n            )}\n          </div>\n\n          <Togglable buttonLabel=\"add blog\" ref={blogFormRef}>\n            <BlogForm createBlog={addBlog} />\n          </Togglable>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}