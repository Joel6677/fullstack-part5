{"ast":null,"code":"var _jsxFileName = \"/home/hejoel/fullstack/fullstack-part5/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport LoginForm from './components/LoginForm';\nimport Togglable from './components/Togglable';\nimport BlogForm from './components/BlogForm';\nimport './App.css';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null); //  const [errorMessage, setErrorMessage] = useState(null)\n\n  const [notifMessage, setNotifMessage] = useState(null);\n  const [notifColor, setNotifColor] = useState('');\n  const [loginVisible, setLoginVisible] = useState(false);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const addBlog = blogObject => {\n    blogService.create(blogObject).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n      setNotifColor('green');\n      setNotifMessage(`Blog added: ${returnedBlog.title}, ${returnedBlog.author}`);\n      setTimeout(() => {\n        setNotifMessage(null);\n      }, 5000);\n    });\n  };\n\n  const increaseLike = likedBlog => {\n    console.log('Liked!');\n    const blogObject = {\n      title: likedBlog.title,\n      author: likedBlog.author,\n      url: likedBlog.url,\n      likes: likedBlog.likes + 1,\n      id: likedBlog.id\n    };\n    const newId = likedBlog.id;\n    blogService.update(newId, blogObject).then(returnedBlog => {\n      setBlogs(blogs.map(blog => blog.id !== returnedBlog.id ? blog : returnedBlog));\n    });\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log('logging in with', username, password);\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setNotifColor('red');\n      setNotifMessage('Wrong username or password');\n      setTimeout(() => {\n        setNotifMessage(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBlogappUser'); //blogService.setToken(null)\n\n    setUser(null);\n  };\n\n  const handleRemove = blogToRemove => {\n    const idToRemove = blogToRemove.id;\n    console.log(idToRemove);\n    const whoPostedThis = blogToRemove.user === undefined ? null : blogToRemove.user.username;\n    console.log(whoPostedThis);\n    const currentUser = user === null ? null : user.username;\n    console.log(currentUser);\n\n    if (currentUser !== whoPostedThis) {\n      setNotifColor('red');\n      setNotifMessage('You can only delete blogs you have posted');\n      setTimeout(() => {\n        setNotifMessage(null);\n      }, 5000);\n    } else if (window.confirm(`Are you sure you want to remove this blog?`)) {\n      console.log('removing blog ' + idToRemove);\n      /*blogService\n        .remove(idToRemove)\n        .then(() => setBlogs(blogs.filter(blog => blog.id !== idToRemove)))\n      setNotifColor('green')\n      setNotifMessage('Blog removed')\n      setTimeout(() => {\n        setNotifMessage(null)\n      }, 5000)*/\n    }\n  };\n\n  const loginForm = () => {\n    const hideWhenVisible = {\n      display: loginVisible ? 'none' : ''\n    };\n    const showWhenVisible = {\n      display: loginVisible ? '' : 'none'\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: hideWhenVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"viewLogin\",\n      onClick: () => setLoginVisible(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"log in\")), React.createElement(\"div\", {\n      style: showWhenVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(LoginForm, {\n      username: username,\n      password: password,\n      handleUsernameChange: ({\n        target\n      }) => setUsername(target.value),\n      handlePasswordChange: ({\n        target\n      }) => setPassword(target.value),\n      handleSubmit: handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => setLoginVisible(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"cancel\")));\n  };\n\n  const blogForm = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, user.name, \" logged in \\xA0\", React.createElement(\"button\", {\n    type: \"logout\",\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"log out\")), blogs.sort((a, b) => b.likes - a.likes).map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    handleLike: increaseLike,\n    handleRemove: handleRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  })), React.createElement(Togglable, {\n    buttonLabel: \"new blog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(BlogForm, {\n    createBlog: addBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })));\n\n  const Notification = ({\n    message,\n    color\n  }) => {\n    if (message === null) {\n      return null;\n    } else {\n      if (color === 'red') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"notifRed\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, message));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"notifGreen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, message));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Notification, {\n    message: notifMessage,\n    color: notifColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Blogs\"), user === null ? loginForm() : blogForm());\n};\n\nexport default App;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-part5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","blogService","loginService","LoginForm","Togglable","BlogForm","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","notifMessage","setNotifMessage","notifColor","setNotifColor","loginVisible","setLoginVisible","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","addBlog","blogObject","create","returnedBlog","concat","title","author","setTimeout","increaseLike","likedBlog","console","log","url","likes","id","newId","update","map","blog","handleLogin","event","preventDefault","login","setItem","stringify","exception","handleLogout","removeItem","handleRemove","blogToRemove","idToRemove","whoPostedThis","undefined","currentUser","confirm","loginForm","hideWhenVisible","display","showWhenVisible","target","value","blogForm","name","sort","a","b","Notification","message","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,IAAD,CAAhC,CAJgB,CAKhB;;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,KAAD,CAAhD;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,WAAW,CAACoB,MAAZ,GAAqBC,IAArB,CAA0Bf,KAAK,IAC7BC,QAAQ,CAACD,KAAD,CADV;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,cAAc,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,CAAvB;;AACA,QAAIH,cAAJ,EAAoB;AAClB,YAAMV,IAAI,GAAGc,IAAI,CAACC,KAAL,CAAWL,cAAX,CAAb;AACAT,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAZ,MAAAA,WAAW,CAAC4B,QAAZ,CAAqBhB,IAAI,CAACiB,KAA1B;AACD;AACF,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMC,OAAO,GAAIC,UAAD,IAAgB;AAC9B/B,IAAAA,WAAW,CACRgC,MADH,CACUD,UADV,EAEGV,IAFH,CAEQY,YAAY,IAAI;AACpB1B,MAAAA,QAAQ,CAACD,KAAK,CAAC4B,MAAN,CAAaD,YAAb,CAAD,CAAR;AACAhB,MAAAA,aAAa,CAAC,OAAD,CAAb;AACAF,MAAAA,eAAe,CAAE,eAAckB,YAAY,CAACE,KAAM,KAAIF,YAAY,CAACG,MAAO,EAA3D,CAAf;AACAC,MAAAA,UAAU,CAAC,MAAM;AACftB,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAID,KAVH;AAWD,GAZD;;AAcA,QAAMuB,YAAY,GAAIC,SAAD,IAAe;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAMV,UAAU,GAAG;AACjBI,MAAAA,KAAK,EAAEI,SAAS,CAACJ,KADA;AAEjBC,MAAAA,MAAM,EAAEG,SAAS,CAACH,MAFD;AAGjBM,MAAAA,GAAG,EAAEH,SAAS,CAACG,GAHE;AAIjBC,MAAAA,KAAK,EAAEJ,SAAS,CAACI,KAAV,GAAkB,CAJR;AAKjBC,MAAAA,EAAE,EAAEL,SAAS,CAACK;AALG,KAAnB;AAQA,UAAMC,KAAK,GAAGN,SAAS,CAACK,EAAxB;AAEA5C,IAAAA,WAAW,CAAC8C,MAAZ,CAAmBD,KAAnB,EAA0Bd,UAA1B,EACGV,IADH,CACQY,YAAY,IAAI;AACpB1B,MAAAA,QAAQ,CAACD,KAAK,CAACyC,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYX,YAAY,CAACW,EAAzB,GAA8BI,IAA9B,GAAqCf,YAAvD,CAAD,CAAR;AACD,KAHH;AAID,GAhBD;;AAkBA,QAAMgB,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnCA,IAAAA,KAAK,CAACC,cAAN;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BjC,QAA/B,EAAyCE,QAAzC;;AACA,QAAI;AACF,YAAME,IAAI,GAAG,MAAMX,YAAY,CAACmD,KAAb,CAAmB;AACpC5C,QAAAA,QADoC;AAC1BE,QAAAA;AAD0B,OAAnB,CAAnB;AAGAa,MAAAA,MAAM,CAACC,YAAP,CAAoB6B,OAApB,CACE,mBADF,EACuB3B,IAAI,CAAC4B,SAAL,CAAe1C,IAAf,CADvB;AAGAZ,MAAAA,WAAW,CAAC4B,QAAZ,CAAqBhB,IAAI,CAACiB,KAA1B;AACAhB,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAH,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAXD,CAWE,OAAO4C,SAAP,EAAkB;AAClBtC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,MAAAA,eAAe,CAAC,4BAAD,CAAf;AACAsB,MAAAA,UAAU,CAAC,MAAM;AACftB,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GArBD;;AAuBA,QAAMyC,YAAY,GAAG,MAAM;AACzBjC,IAAAA,MAAM,CAACC,YAAP,CAAoBiC,UAApB,CAA+B,mBAA/B,EADyB,CAEzB;;AACA5C,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAJD;;AAMA,QAAM6C,YAAY,GAAIC,YAAD,IAAkB;AACrC,UAAMC,UAAU,GAAGD,YAAY,CAACf,EAAhC;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYmB,UAAZ;AACA,UAAMC,aAAa,GAAIF,YAAY,CAAC/C,IAAb,KAAsBkD,SAAtB,GAAkC,IAAlC,GAAyCH,YAAY,CAAC/C,IAAb,CAAkBJ,QAAlF;AACAgC,IAAAA,OAAO,CAACC,GAAR,CAAYoB,aAAZ;AACA,UAAME,WAAW,GACfnD,IAAI,KAAK,IAAT,GACE,IADF,GACSA,IAAI,CAACJ,QAFhB;AAIAgC,IAAAA,OAAO,CAACC,GAAR,CAAYsB,WAAZ;;AACA,QAAIA,WAAW,KAAKF,aAApB,EAAmC;AACjC5C,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,MAAAA,eAAe,CAAC,2CAAD,CAAf;AACAsB,MAAAA,UAAU,CAAC,MAAM;AACftB,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAID,KAPD,MAQK,IAAIQ,MAAM,CAACyC,OAAP,CAAgB,4CAAhB,CAAJ,EAAkE;AACrExB,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBmB,UAA/B;AACA;;;;;;;;AAQD;AAEF,GA9BD;;AAiCA,QAAMK,SAAS,GAAG,MAAM;AACtB,UAAMC,eAAe,GAAG;AAAEC,MAAAA,OAAO,EAAEjD,YAAY,GAAG,MAAH,GAAY;AAAnC,KAAxB;AACA,UAAMkD,eAAe,GAAG;AAAED,MAAAA,OAAO,EAAEjD,YAAY,GAAG,EAAH,GAAQ;AAA/B,KAAxB;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAEgD,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,EAAE,EAAC,WAAX;AAAuB,MAAA,OAAO,EAAE,MAAM/C,eAAe,CAAC,IAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAIE;AAAK,MAAA,KAAK,EAAEiD,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAE5D,QADZ;AAEE,MAAA,QAAQ,EAAEE,QAFZ;AAGE,MAAA,oBAAoB,EAAE,CAAC;AAAE2D,QAAAA;AAAF,OAAD,KAAgB5D,WAAW,CAAC4D,MAAM,CAACC,KAAR,CAHnD;AAIE,MAAA,oBAAoB,EAAE,CAAC;AAAED,QAAAA;AAAF,OAAD,KAAgB1D,WAAW,CAAC0D,MAAM,CAACC,KAAR,CAJnD;AAKE,MAAA,YAAY,EAAErB,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AAAQ,MAAA,OAAO,EAAE,MAAM9B,eAAe,CAAC,KAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,CAJF,CADF;AAiBD,GArBD;;AAyBA,QAAMoD,QAAQ,GAAG,MACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI3D,IAAI,CAAC4D,IAAT,qBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEhB,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIGlD,KAAK,CACLmE,IADA,CACK,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAAChC,KAAF,GAAU+B,CAAC,CAAC/B,KAD3B,EAEAI,GAFA,CAEIC,IAAI,IACP,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACJ,EAAhB;AAAoB,IAAA,IAAI,EAAEI,IAA1B;AAAgC,IAAA,UAAU,EAAEV,YAA5C;AAA0D,IAAA,YAAY,EAAEoB,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CAJH,EASE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAE5B,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CADF;;AAgBA,QAAM8C,YAAY,GAAG,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,KAAwB;AAC3C,QAAID,OAAO,KAAK,IAAhB,EAAsB;AACpB,aAAO,IAAP;AACD,KAFD,MAEO;AACL,UAAIC,KAAK,KAAK,KAAd,EAAqB;AACnB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,OADH,CADF,CADF;AAOD;;AACD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,OADH,CADF,CADF;AAMD;AACF,GApBD;;AAsBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE/D,YAAvB;AAAqC,IAAA,KAAK,EAAEE,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGGJ,IAAI,KAAK,IAAT,GACCqD,SAAS,EADV,GAECM,QAAQ,EALZ,CADF;AAUD,CAlMD;;AAoMA,eAAelE,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport LoginForm from './components/LoginForm'\nimport Togglable from './components/Togglable'\nimport BlogForm from './components/BlogForm'\nimport './App.css'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  //  const [errorMessage, setErrorMessage] = useState(null)\n  const [notifMessage, setNotifMessage] = useState(null)\n  const [notifColor, setNotifColor] = useState('')\n  const [loginVisible, setLoginVisible] = useState(false)\n\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = (blogObject) => {\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setNotifColor('green')\n        setNotifMessage(`Blog added: ${returnedBlog.title}, ${returnedBlog.author}`)\n        setTimeout(() => {\n          setNotifMessage(null)\n        }, 5000)\n\n      })\n  }\n\n  const increaseLike = (likedBlog) => {\n    console.log('Liked!')\n    const blogObject = {\n      title: likedBlog.title,\n      author: likedBlog.author,\n      url: likedBlog.url,\n      likes: likedBlog.likes + 1,\n      id: likedBlog.id\n    }\n\n    const newId = likedBlog.id\n\n    blogService.update(newId, blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.map(blog => blog.id !== returnedBlog.id ? blog : returnedBlog))\n      })\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with', username, password)\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setNotifColor('red')\n      setNotifMessage('Wrong username or password')\n      setTimeout(() => {\n        setNotifMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    //blogService.setToken(null)\n    setUser(null)\n  }\n\n  const handleRemove = (blogToRemove) => {\n    const idToRemove = blogToRemove.id\n    console.log(idToRemove)\n    const whoPostedThis = (blogToRemove.user === undefined ? null : blogToRemove.user.username)\n    console.log(whoPostedThis)\n    const currentUser = (\n      user === null ?\n        null : user.username\n    )\n    console.log(currentUser)\n    if (currentUser !== whoPostedThis) {\n      setNotifColor('red')\n      setNotifMessage('You can only delete blogs you have posted')\n      setTimeout(() => {\n        setNotifMessage(null)\n      }, 5000)\n\n    }\n    else if (window.confirm(`Are you sure you want to remove this blog?`)) {\n      console.log('removing blog ' + idToRemove)\n      /*blogService\n        .remove(idToRemove)\n        .then(() => setBlogs(blogs.filter(blog => blog.id !== idToRemove)))\n      setNotifColor('green')\n      setNotifMessage('Blog removed')\n      setTimeout(() => {\n        setNotifMessage(null)\n      }, 5000)*/\n    }\n\n  }\n\n\n  const loginForm = () => {\n    const hideWhenVisible = { display: loginVisible ? 'none' : '' }\n    const showWhenVisible = { display: loginVisible ? '' : 'none' }\n\n    return (\n      <div>\n        <div style={hideWhenVisible}>\n          <button id='viewLogin' onClick={() => setLoginVisible(true)}>log in</button>\n        </div>\n        <div style={showWhenVisible}>\n          <LoginForm\n            username={username}\n            password={password}\n            handleUsernameChange={({ target }) => setUsername(target.value)}\n            handlePasswordChange={({ target }) => setPassword(target.value)}\n            handleSubmit={handleLogin}\n          />\n          <button onClick={() => setLoginVisible(false)}>cancel</button>\n        </div>\n      </div>\n    )\n  }\n\n\n\n  const blogForm = () => (\n    <div>\n      <p>{user.name} logged in &nbsp;\n        <button type=\"logout\" onClick={handleLogout}>log out</button>\n      </p>\n      {blogs\n      .sort((a, b) => b.likes - a.likes)\n      .map(blog =>\n        <Blog key={blog.id} blog={blog} handleLike={increaseLike} handleRemove={handleRemove} />\n      )}\n      <Togglable buttonLabel=\"new blog\">\n        <BlogForm createBlog={addBlog} />\n      </Togglable>\n    </div>\n  )\n\n  const Notification = ({ message, color }) => {\n    if (message === null) {\n      return null\n    } else {\n      if (color === 'red') {\n        return (\n          <div>\n            <div className=\"notifRed\">\n              {message}\n            </div>\n          </div>\n        )\n      }\n      return (\n        <div>\n          <div className=\"notifGreen\">\n            {message}</div>\n        </div>)\n\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={notifMessage} color={notifColor} />\n      <h1>Blogs</h1>\n      {user === null ?\n        loginForm() :\n        blogForm()\n      }\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}