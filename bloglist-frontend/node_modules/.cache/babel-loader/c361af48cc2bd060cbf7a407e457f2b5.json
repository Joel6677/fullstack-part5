{"ast":null,"code":"var _jsxFileName = \"/home/hejoel/fullstack/fullstack-part5/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport Notification from './components/Notification';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Togglable from './components/Togglable';\nimport BlogForm from './components/BlogForm';\nimport './App.css';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [infoMessage, setInfoMessage] = useState(null);\n  const blogFormRef = React.createRef();\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const addBlog = blogObject => {\n    blogFormRef.current.toggleVisibility();\n    blogService.create(blogObject).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n      setInfoMessage(`a new blog \"${blogObject.title}\" by \"${blogObject.author}\" added`);\n      setTimeout(() => {\n        setInfoMessage(null);\n      }, 5000);\n    });\n  };\n\n  const likeBlog = id => {\n    const blog = blogs.find(b => b.id === id);\n    const blogObject = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: blog.likes + 1,\n      id: blog.id\n    };\n    console.log(blogObject);\n    blogService.update(id, blogObject).then(returnedBlog => {\n      setBlogs(blogs.map(blog => blog.id !== returnedBlog.id ? blog : returnedBlog));\n    });\n  };\n\n  const deleteBlog = id => {\n    blogService.remove(id).then(() => setBlogs(blogs.filter(blog => blog.id !== id)));\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('wrong username or password');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = async event => {\n    event.preventDefault();\n    window.localStorage.removeItem('loggedBlogappUser');\n    blogService.setToken(null);\n    setUser(null);\n  };\n\n  if (user === null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Log in to application\"), React.createElement(Notification, {\n      message: errorMessage,\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"username\", React.createElement(\"input\", {\n      type: \"text\",\n      value: username,\n      name: \"Username\",\n      onChange: ({\n        target\n      }) => setUsername(target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"password\", React.createElement(\"input\", {\n      type: \"password\",\n      value: password,\n      name: \"Password\",\n      onChange: ({\n        target\n      }) => setPassword(target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"login\")));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"blogs\"), React.createElement(Notification, {\n    message: infoMessage,\n    color: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, user.name, \" logged in\", React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"logout\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, blogs.sort((a, b) => b.likes - a.likes).map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    likeBlog: () => likeBlog(blog.id),\n    deleteBlog: () => deleteBlog(blog.id),\n    sameUser: blog.user === user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Togglable, {\n    buttonLabel: \"new blog\",\n    ref: blogFormRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(BlogForm, {\n    createBlog: addBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-part5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","Notification","blogService","loginService","Togglable","BlogForm","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","infoMessage","setInfoMessage","blogFormRef","createRef","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","addBlog","blogObject","current","toggleVisibility","create","returnedBlog","concat","title","author","setTimeout","likeBlog","id","blog","find","b","url","likes","console","log","update","map","deleteBlog","remove","filter","handleLogin","event","preventDefault","login","setItem","stringify","exception","handleLogout","removeItem","target","value","name","sort","a"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Togglable from './components/Togglable'\nimport BlogForm from './components/BlogForm'\nimport './App.css'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [infoMessage, setInfoMessage] = useState(null)\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    \n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setInfoMessage(`a new blog \"${blogObject.title}\" by \"${blogObject.author}\" added`)\n        setTimeout(() => {\n          setInfoMessage(null)\n        }, 5000)\n      })\n  }\n\n  const likeBlog = (id) => {\n    const blog = blogs.find(b => b.id === id)\n    \n    const blogObject = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: blog.likes + 1,\n      id: blog.id\n    }\n\n    console.log(blogObject)\n\n    blogService.update(id, blogObject)\n    .then(returnedBlog => {\n      setBlogs(blogs.map(blog => blog.id !== returnedBlog.id ? blog : returnedBlog))\n    })\n\n  }\n\n  const deleteBlog = (id) => {\n\n    blogService\n      .remove(id)\n      .then(() => setBlogs(blogs.filter(blog => blog.id !== id)))\n\n  }\n\n  \n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      ) \n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong username or password')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n    window.localStorage.removeItem('loggedBlogappUser')\n    blogService.setToken(null)\n    setUser(null)\n  }\n\n\n\n\n  if (user === null) {\n    return (\n      <div>\n        <h2>Log in to application</h2>\n        <Notification message={errorMessage} color ='red'/>\n        \n        <form onSubmit={handleLogin}>\n      <div>\n        username\n          <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n          <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n      </div>\n    )\n  }\n\n  return (\n    \n    <div>\n      <h2>blogs</h2>\n      <Notification message={infoMessage} color='green' />\n      <form onSubmit={handleLogout}>\n        {user.name} logged in\n        <button type=\"submit\">logout</button>\n      </form>\n      <div>\n        {blogs.sort((a, b) => b.likes - a.likes)\n        .map(blog =>\n          <Blog key={blog.id} blog={blog} likeBlog={() => likeBlog(blog.id)} deleteBlog={() => deleteBlog(blog.id)} sameUser={blog.user === user}/>\n        )}\n      </div>\n      <div>\n        <Togglable buttonLabel=\"new blog\" ref={blogFormRef}>\n          <BlogForm createBlog={addBlog} />\n        </Togglable>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}