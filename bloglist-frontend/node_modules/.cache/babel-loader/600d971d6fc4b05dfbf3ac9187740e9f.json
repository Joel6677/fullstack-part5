{"ast":null,"code":"// import axios from 'axios'\n// const baseUrl = '/api/blogs'\n// let token = null\n// const setToken = newToken => {\n//   token = `bearer ${newToken}`\n// }\n// const getAll = () => {\n//   const request = axios.get(baseUrl)\n//   return request.then(response => response.data)\n// }\n// const remove = (id) => {\n//   return (  \n//     axios.delete(`${baseUrl}/${id}`))\n// }\n// const create = async newObject => {\n//   const config = {\n//     headers: { Authorization: token },\n//   }\n//   const response = await axios.post(baseUrl, newObject, config)\n//   return response.data\n// }\n// const update = (id, newObject) => {\n//   const request = axios.put(`${baseUrl}/${id}`, newObject)\n//   return request.then(response => response.data)\n// }\n// export default { getAll, create, update, setToken, remove }\nimport axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  setToken,\n  remove\n};","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-part5/bloglist-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","remove","id","delete","create","newObject","config","headers","Authorization","post","update","put"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AACA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACD,CAFD;;AAKA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAhB;AACA,SAAOK,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAIC,EAAD,IAAQ;AACrB,SACEZ,KAAK,CAACa,MAAN,CAAc,GAAEZ,OAAQ,IAAGW,EAAG,EAA9B,CADF;AAED,CAHD;;AAKA,MAAME,MAAM,GAAG,MAAMC,SAAN,IAAmB;AAChC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEhB;AAAjB;AADI,GAAf;AAGA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACmB,IAAN,CAAWlB,OAAX,EAAoBc,SAApB,EAA+BC,MAA/B,CAAvB;AACA,SAAOP,QAAQ,CAACC,IAAhB;AACD,CAND;;AAQA,MAAMU,MAAM,GAAG,CAACR,EAAD,EAAKG,SAAL,KAAmB;AAChC,QAAMT,OAAO,GAAGN,KAAK,CAACqB,GAAN,CAAW,GAAEpB,OAAQ,IAAGW,EAAG,EAA3B,EAA8BG,SAA9B,CAAhB;AACA,SAAOT,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,eAAe;AAAEL,EAAAA,MAAF;AAAUS,EAAAA,MAAV;AAAkBM,EAAAA,MAAlB;AAA0BjB,EAAAA,QAA1B;AAAoCQ,EAAAA;AAApC,CAAf","sourcesContent":["// import axios from 'axios'\n// const baseUrl = '/api/blogs'\n// let token = null\n\n// const setToken = newToken => {\n//   token = `bearer ${newToken}`\n// }\n\n\n// const getAll = () => {\n//   const request = axios.get(baseUrl)\n//   return request.then(response => response.data)\n// }\n\n// const remove = (id) => {\n//   return (  \n//     axios.delete(`${baseUrl}/${id}`))\n// }\n\n// const create = async newObject => {\n//   const config = {\n//     headers: { Authorization: token },\n//   }\n//   const response = await axios.post(baseUrl, newObject, config)\n//   return response.data\n// }\n\n// const update = (id, newObject) => {\n//   const request = axios.put(`${baseUrl}/${id}`, newObject)\n//   return request.then(response => response.data)\n// }\n\n// export default { getAll, create, update, setToken, remove }\n\n\nimport axios from 'axios'\nconst baseUrl = '/api/blogs'\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  return (  \n    axios.delete(`${baseUrl}/${id}`))\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken, remove }\n"]},"metadata":{},"sourceType":"module"}